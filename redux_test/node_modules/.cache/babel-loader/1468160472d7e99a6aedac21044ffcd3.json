{"ast":null,"code":"/* \r\n\t该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\n//引入createStore，专门用于创建redux中最为核心的store对象\nimport { createStore, applyMiddleware, combineReducers } from \"redux\"; //引入为Count组件服务的reducer\n\nimport countReducer from \"./reducers/count\"; //引入为Count组件服务的reducer\n\nimport personReducer from \"./reducers/person\"; //引入redux-thunk，用于支持异步action\n\nimport thunk from \"redux-thunk\"; //引入redux-devtools-extension\n\nimport { composeWithDevTools } from \"redux-devtools-extension\"; //汇总所有的reducer变为一个总的reducer\n\nconst allReducer = combineReducers({\n  he: countReducer,\n  rens: personReducer\n}); //暴露store\n// 第一个参数是汇总所有的reducer为一个参数。\n// 这里的第二个参数是引入Redux的工具，个人感觉这个写法很差劲，一点都不优雅，不如pinia那样简便，这里还需要下载依赖和进行代码的配置，太麻烦了\n\nexport default createStore(allReducer, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["D:/A官方笔记/尚硅谷前端/react/源码/源码/redux_test/src/redux/store.js"],"names":["createStore","applyMiddleware","combineReducers","countReducer","personReducer","thunk","composeWithDevTools","allReducer","he","rens"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,MAAMC,UAAU,GAAGL,eAAe,CAAC;AACjCM,EAAAA,EAAE,EAAEL,YAD6B;AAEjCM,EAAAA,IAAI,EAAEL;AAF2B,CAAD,CAAlC,C,CAKA;AACA;AACA;;AACA,eAAeJ,WAAW,CACxBO,UADwB,EAExBD,mBAAmB,CAACL,eAAe,CAACI,KAAD,CAAhB,CAFK,CAA1B","sourcesContent":["/* \r\n\t该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n\r\n//引入createStore，专门用于创建redux中最为核心的store对象\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n//引入为Count组件服务的reducer\r\nimport countReducer from \"./reducers/count\";\r\n//引入为Count组件服务的reducer\r\nimport personReducer from \"./reducers/person\";\r\n//引入redux-thunk，用于支持异步action\r\nimport thunk from \"redux-thunk\";\r\n//引入redux-devtools-extension\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//汇总所有的reducer变为一个总的reducer\r\nconst allReducer = combineReducers({\r\n  he: countReducer,\r\n  rens: personReducer,\r\n});\r\n\r\n//暴露store\r\n// 第一个参数是汇总所有的reducer为一个参数。\r\n// 这里的第二个参数是引入Redux的工具，个人感觉这个写法很差劲，一点都不优雅，不如pinia那样简便，这里还需要下载依赖和进行代码的配置，太麻烦了\r\nexport default createStore(\r\n  allReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}